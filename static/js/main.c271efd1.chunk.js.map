{"version":3,"sources":["utils/load-contract.js","App.js","reportWebVitals.js","index.js"],"names":["loadContract","name","provider","a","fetch","res","json","Artifact","_contract","contract","setProvider","deployedContract","deployed","console","error","App","useState","isProviderLoaded","web3","web3Api","setWeb3Api","balance","setBalance","account","setAccount","shouldReload","reload","canConnectToContract","reloadEffect","useCallback","setAccountListener","on","_","window","location","useEffect","loadProvider","detectEthereumProvider","Web3","api","loadBalance","eth","getBalance","address","utils","fromWei","getAccount","getAccounts","accounts","addfunds","addFunds","from","value","toWei","withdraw","withdrawAmount","className","onClick","request","method","target","rel","href","disabled","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c271efd1.chunk.js","sourcesContent":["import contract from \"@truffle/contract\"\r\n\r\nexport const loadContract = async (name, provider) => {\r\n  const res = await fetch(`/contracts/${name}.json`)\r\n  const Artifact = await res.json()\r\n  \r\n  const _contract = contract(Artifact)\r\n  _contract.setProvider(provider) \r\n\r\n  let deployedContract = null\r\n  try {\r\n    deployedContract = await _contract.deployed()\r\n  } catch {\r\n    console.error(\"You are connected to the wrong network\")\r\n  }\r\n    \r\n  return deployedContract\r\n  \r\n}","import { useCallback, useEffect, useState } from \"react\";\nimport './App.css';\nimport Web3 from \"web3\";\nimport detectEthereumProvider from '@metamask/detect-provider'\nimport {loadContract} from \"./utils/load-contract\";\n\nfunction App() {\n  const [web3Api, setWeb3Api] = useState({\n    provider: null,\n    isProviderLoaded: false,\n    web3: null,\n    contract: null,\n  })\n\n  const [balance, setBalance] = useState(null)\n  const [account, setAccount] = useState(null)\n  const [shouldReload, reload] = useState(false)\n\n  const canConnectToContract = account && web3Api.contract\n  const reloadEffect = useCallback(() => reload(!shouldReload),[shouldReload])\n\n  const setAccountListener = provider => {\n    provider.on(\"accountsChanged\", _ => window.location.reload())\n    provider.on(\"chainChanged\", _ => window.location.reload())\n\n    // provider._jsonRpcConnection.events.on(\"notfication\", (payload) => {\n    //   const {method} = payload\n\n    //   if (method === \"metamask_unlockStateChanged\") {\n    //     setAccount(null)\n    //   }\n    // })\n  }\n\n  useEffect(() => {\n      const loadProvider = async () => {\n      const provider = await detectEthereumProvider();\n\n      if (provider) {\n        const contract = await loadContract(\"Faucet\", provider)\n        setAccountListener(provider)\n        //provider.request({method: \"eth_requestAccounts\"})\n        setWeb3Api({\n        web3: new Web3(provider),\n        provider,\n        contract,\n        isProviderLoaded: true\n      })\n\n      } else {\n        setWeb3Api(api => ({...api, isProviderLoaded:true}))\n        console.error(\"Please, install Metamask\")\n      }\n    }\n      // if (window.ethereum) {\n      //   provider = window.ethereum;\n\n      //   try {\n      //     await provider.request({method: \"eth_requestAccounts\"}); //call popup metamask\n      //   } catch {\n      //     console.error(\"User denied accounts access!\")\n      //   }\n      // }\n      // else if (window.web3) {\n      //   provider = window.web3.currentProvider\n      // }\n      // else if (!process.env.production) {\n      //   provider = new Web3.providers.HttpProvider(\"http://localhost:7545\")\n      // }\n\n      // setWeb3Api({\n      //   web3: new Web3(provider),\n      //   provider\n      // })\n    \n\n    loadProvider()\n  }, [])\n\n  useEffect(() => {\n    const loadBalance = async () => {\n      const {contract, web3} = web3Api\n      const balance = await web3.eth.getBalance(contract.address)\n      setBalance(web3.utils.fromWei(balance, \"ether\"))\n    }\n    web3Api.web3 && loadBalance()\n  }, [web3Api, shouldReload])\n\n  useEffect(() => {\n    const getAccount = async () => {\n      const accounts = await web3Api.web3.eth.getAccounts()\n      debugger\n      setAccount(accounts[0])\n    }\n    web3Api.web3 && getAccount()\n  }, [web3Api.web3])\n\n  const addfunds =  useCallback(async () => {\n    const {contract , web3} = web3Api\n    await contract.addFunds({\n      from: account,\n      value: web3.utils.toWei(\"1\", \"ether\")\n    })\n\n    //window.location.reload();\n    reloadEffect()\n  }, [web3Api, account, reloadEffect])\n\n  const withdraw =  useCallback(async () => {\n    const {contract , web3} = web3Api\n    const withdrawAmount = web3.utils.toWei(\"0.1\", \"ether\")\n    await contract.withdraw(withdrawAmount,{\n      from: account,\n    })\n\n    //window.location.reload();\n    reloadEffect()\n  }, [web3Api, account, reloadEffect])\n  \n  return (\n  <>\n    <div className=\"faucet-wrapper\">\n      <div className=\"faucet\">\n        { web3Api.isProviderLoaded ?\n          <div className=\"is-flex is-align-items-center\">\n            <span>\n              <strong className=\"mr-2\">Account :</strong>\n            </span>\n              {\n              account ? //if have account\n                <div>{account}</div> : //show account\n                !web3Api.provider ?//if doesn't have accounts\n                <>\n                  <div className=\"notification is-warning is-size-7 is-rounded\">\n                    Wallet is not detected!{` `} \n                    <a target =\"_blank\" rel=\"noreferrer\" href=\"https://metamask.io/download.html\">\n                      Install Metamask\n                    </a>\n                  </div>\n                </> :\n              <button\n                className=\"button is-small\"\n                onClick={() => web3Api.provider.request({method: \"eth_requestAccounts\"})}\n              >\n                Connect Wallet\n              </button>\n              }\n          </div> :\n          <span>Looking for web3...</span>\n        }\n        <div className=\"balance-view is-size-2 my-4\">\n          Current Balance: <strong>{balance}</strong> ETH\n        </div>\n        {!canConnectToContract &&\n          <i className=\"is-block\">\n            Connect to Ganache\n          </i>\n        }\n        <button \n          disabled={!canConnectToContract}\n          onClick={addfunds}\n          className=\"button is-danger mr-2\">\n            Donate 1 ETH</button>\n        <button\n        disabled={!canConnectToContract}\n        onClick={withdraw}\n         className=\"button is-primary\">\n            Withdraw 0.1 ETH</button>\n      </div>\n    </div>\n  </>\n  );\n}\n\nexport default App;\n\n\n//problem solve by using this try to remove first node_modules and package-lock.json\n// then\n// npm install --save react-scripts@4.0.3\n// and\n// npm install","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport \"bulma/css/bulma.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}